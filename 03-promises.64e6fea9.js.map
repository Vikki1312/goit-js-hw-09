{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SACxBD,SAASC,cAAc,UAsCrC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCC,YAAW,WACTJ,EAAQ,CAAEH,WAAUC,S,GACnBA,GAEHM,YAAW,WACTH,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IA1CTL,EAAOY,iBAAiB,UAExB,SAAkBC,GAChB,IAEmBC,EAAfD,EAAEE,cADJC,SAAYC,EAAKH,EAALT,MAAOa,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAErBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAcF,OAAOF,EAAOG,OAC5BE,EAAYH,OAAOH,EAAKI,OAE9BT,EAAEY,iBAKF,IAHA,IAAIC,EAAkB,EAClBC,EAAeP,EAEVQ,EAAI,EAAGA,EAAIL,EAAaK,IAC/BzB,EAAcuB,EAAiBC,GAC5BE,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAAjC,GAASkC,OAAOI,QACd,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjDqB,GAAmB,EACnBC,GAAgBH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst btnEl = document.querySelector('button');\n\n// formEl.elements.delay.value = 1100;\n// formEl.elements.step.value = 1500;\n// formEl.elements.amount.value = 7;\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  const delayValue = Number(delay.value);\n  const amountValue = Number(amount.value);\n  const stepValue = Number(step.value);\n\n  e.preventDefault();\n\n  let promisePosition = 1;\n  let promiseDelay = delayValue;\n\n  for (let i = 0; i < amountValue; i++) {\n    createPromise(promisePosition, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    promisePosition += 1;\n    promiseDelay += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","addEventListener","e","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","amountValue","stepValue","preventDefault","promisePosition","promiseDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.64e6fea9.js.map"}