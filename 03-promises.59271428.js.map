{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SACxBD,SAASC,cAAc,UAsCrC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCC,YAAW,KACTJ,EAAQ,C,SAAEH,E,MAAUC,GAAQ,GAC3BA,GAEHM,YAAW,KACTH,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CA1CfL,EAAOY,iBAAiB,UAExB,SAAkBC,GAChB,MACEC,UAAYT,MAAAU,EAAKC,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cACAC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAcF,OAAOH,EAAOI,OAC5BE,EAAYH,OAAOJ,EAAKK,OAE9BR,EAAEW,iBAEF,IAAIC,EAAkB,EAClBC,EAAeP,EAEnB,IAAK,IAAIQ,EAAI,EAAGA,EAAIL,EAAaK,IAC/BxB,EAAcsB,EAAiBC,GAC5BE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA/B,GAASgC,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA/B,GAASgC,OAAOG,QACd,sBAAoB7B,QAAeC,MAAU,IAGnDoB,GAAmB,EACnBC,GAAgBH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst btnEl = document.querySelector('button');\n\n// formEl.elements.delay.value = 1100;\n// formEl.elements.step.value = 1500;\n// formEl.elements.amount.value = 7;\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  const delayValue = Number(delay.value);\n  const amountValue = Number(amount.value);\n  const stepValue = Number(step.value);\n\n  e.preventDefault();\n\n  let promisePosition = 1;\n  let promiseDelay = delayValue;\n\n  for (let i = 0; i < amountValue; i++) {\n    createPromise(promisePosition, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    promisePosition += 1;\n    promiseDelay += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","addEventListener","e","elements","delay1","step","amount","currentTarget","delayValue","Number","value","amountValue","stepValue","preventDefault","promisePosition","promiseDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.59271428.js.map"}